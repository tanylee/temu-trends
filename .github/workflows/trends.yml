name: collect-trends

on:
  schedule:
    - cron: "5 */6 * * *"   # каждые 6 часов
  workflow_dispatch: {}

jobs:
  trends:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps
        run: npm install

      - name: Debug repo tree
        run: |
          echo "::group::TREE"
          ls -la
          echo
          echo "./scripts:"
          ls -la scripts || true
          echo "::endgroup::"

      # ✅ Cookie OK, если 200 ИЛИ 302 без /login/
      - name: Check Pinterest cookie
        id: cookie
        env:
          PINTEREST_COOKIE: ${{ secrets.PINTEREST_COOKIE }}
        run: |
          node -e '
            const cookies = JSON.parse(process.env.PINTEREST_COOKIE || "[]");
            const cookieHeader = cookies.map(c=>`${c.name}=${c.value}`).join("; ");
            const UA = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0 Safari/537.36";
            (async () => {
              const r = await fetch("https://www.pinterest.com/", {
                method: "GET",
                headers: {
                  "cookie": cookieHeader,
                  "user-agent": UA,
                  "accept-language": "en-US,en;q=0.9"
                },
                redirect: "manual"
              });
              const loc = r.headers.get("location") || "";
              console.log("Pinterest status:", r.status, loc);
              const isLoginRedirect = loc.includes("/login/");
              const ok = (r.status === 200) || (r.status === 302 && !isLoginRedirect);
              if (!ok) process.exit(2);
            })().catch(e => { console.error(e); process.exit(2); });
          '

      - name: Collect 3-month trends
        env:
          OXYLABS_USER: ${{ secrets.OXYLABS_USER }}
          OXYLABS_PASS: ${{ secrets.OXYLABS_PASS }}
          OXY_ENDPOINT: ${{ secrets.OXY_ENDPOINT }}
        run: node scripts/collect_trends.js

      - name: Collect seasonal trends
        env:
          OXYLABS_USER: ${{ secrets.OXYLABS_USER }}
          OXYLABS_PASS: ${{ secrets.OXYLABS_PASS }}
          OXY_ENDPOINT: ${{ secrets.OXY_ENDPOINT }}
        run: node scripts/collect_seasonal.js

      - name: Map trends to Temu
        env:
          OXYLABS_USER: ${{ secrets.OXYLABS_USER }}
          OXYLABS_PASS: ${{ secrets.OXYLABS_PASS }}
          OXY_ENDPOINT: ${{ secrets.OXY_ENDPOINT }}
        run: node scripts/map_trends_to_temu.js

      - name: Validate Temu links & images
        run: node scripts/validate_temu_links.js

      - name: Score & merge
        run: |
          node scripts/score_trends.js
          node scripts/merge_trends.js

      - name: Commit data
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update products and trends data"

      # === Telegram notify ===
      - name: Notify success
        if: ${{ success() }}
        run: |
          MSG="✅ collect-trends OK · Run #${{ github.run_number }} · Ref ${{ github.ref_name }}"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d text="$MSG"

      - name: Notify failure
        if: ${{ failure() }}
        run: |
          MSG="❌ collect-trends FAILED · Commit ${{ github.sha }}"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d text="$MSG"
